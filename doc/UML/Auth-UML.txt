@startuml
'------------------- Main Activity, Auth Activity, and Authenticated Activty -------------------------------
class AuthActivity {
#void onCreate()
+void showFragment()
+void showToast()
}

class LoginFragment {
+View onCreateView()
}

class RegisterFragment {
+View onCreateView()
}

class MainActivity {
-ActivityMainBinding mBinding
#void onCreate()
+void setUpBottomNavigation()
+void showToast(String msg)
+Uri buildFileUri()
}

class AuthenticatedActivity {
#void onCreate()
-void goToAuth()
#FirebaseUser getUser()
}

AuthenticatedActivity <|-- MainActivity: <<extends>>
AuthenticatedActivity ..> AuthActivity: <<launches>>
AuthActivity *.. LoginFragment
AuthActivity *.. RegisterFragment

'------------------- ViewModel and Repositories (Login / Register)  -------------------------------
class AuthViewModel {
-LoginRepository loginRepository
-MutableLiveData<String> mEmail
-MutableLiveData<String> mPassword
-MutableLiveData<String> mUsername
-SingleLiveEvent<String> mFailureMsgEvent
-SingleLiveEvent<Pair<AuthUtil.InputKey, String>> mInvalidInputEvent
-SingleLiveEvent<Fragment> mFragmentNavigationEvent
-SingleLiveEvent<Void> mAuthenticatedEvent

+AuthViewModel()
+MutableLiveData<String> getEmail()
+MutableLiveData<String> getPassword()
+MutableLiveData<String> getUsername()
+SingleLiveEvent<Fragment> getFragmentNavigationEvent()
+SingleLiveEvent<String> getFailureMsgEvent()
+SingleLiveEvent<Pair<AuthUtil.InputKey, String>> getInvalidInputEvent()
+SingleLiveEvent<Void> getAuthenticatedEvent()
+void createAccount()
+void login()
}

class AuthRepository {
-String USER_COLLECTION
-String USERNAME_FIELD
-FirebaseFirestore mDB
-FirebaseAuth mAuth

+AuthRepository()
+void signIn(String email, String password, OnFinishedListener onFinished)
+void register(String email, String password, String username, OnFinishedListener onFinished)
}

package Firestore {}

AuthRepository ..> Firestore: <<accesses>
AuthViewModel ..> AuthRepository: <<uses>>
LoginFragment ..> AuthViewModel: <<uses>>
RegisterFragment  ..> AuthViewModel: <<uses>>
@enduml
